import boto3
import json
from botocore.exceptions import ClientError

# Initialize DynamoDB client
dynamodb = boto3.resource('dynamodb')
table = dynamodb.Table('UserData')

def lambda_handler(event, context):
    operation = event.get('httpMethod')
    try:
        if operation == 'POST':  # Create
            data = json.loads(event['body'])
            table.put_item(Item=data)
            return {'statusCode': 200, 'body': json.dumps("Item added")}
        
        elif operation == 'GET':  # Read
            user_id = event['queryStringParameters']['UserID']
            response = table.get_item(Key={'UserID': user_id})
            return {'statusCode': 200, 'body': json.dumps(response['Item'])}
        
        elif operation == 'PUT':  # Update
            data = json.loads(event['body'])
            user_id = data['UserID']
            # Assuming we're updating a single attribute for simplicity
            response = table.update_item(
                Key={'UserID': user_id},
                UpdateExpression="set #attr = :val",
                ExpressionAttributeNames={'#attr': 'AttributeName'},
                ExpressionAttributeValues={':val': data['AttributeValue']},
                ReturnValues="UPDATED_NEW"
            )
            return {'statusCode': 200, 'body': json.dumps("Item updated")}
        
        elif operation == 'DELETE':  # Delete
            user_id = event['queryStringParameters']['UserID']
            table.delete_item(Key={'UserID': user_id})
            return {'statusCode': 200, 'body': json.dumps("Item deleted")}
        
    except ClientError as e:
        return {'statusCode': 400, 'body': json.dumps(e.response['Error']['Message'])}
